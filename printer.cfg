# This file contains common pin mappings for the BigTreeTech SKR PRO.
# To use this config, the firmware should be compiled for the
# STM32F407 with a "32KiB bootloader".

# The "make flash" command does not work on the SKR PRO. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR PRO
# with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[include mainsail.cfg]

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos  : False ; use custom park coordinates for x,y [True/False] 
variable_custom_park_x   : 0.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y   : 0.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz  : 15.0   ; custom dz value; the value in mm to lift the nozzle when move to park position 
variable_retract         : 0.0   ; the value to retract while PAUSE
variable_cancel_retract  : 0.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract   : 35.0  ; retract speed in mm/s
variable_unretract       : 0.0   ; the value to unretract while RESUME
variable_speed_unretract : 35.0  ; unretract speed in mm/s
variable_speed_hop       : 15.0  ; z move speed in mm/s
variable_speed_move      : 300.0 ; move speed in mm/s
variable_park_at_cancel  : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True,False]
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract  : False ; use fw_retraction instead of the manual version [True/False] 
gcode:

###############################################################################
#	Cancel Gcode
#	Macro executed whenever a print job is cancelled

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
	{% set X = params.X|default(320)|float %}
	{% set Y = params.Y|default(303)|float %}
	{% set Z = params.Z|default(340)|float %}
	{% set E = params.E|default(-25)|float %}
	SET_GCODE_VARIABLE MACRO=AUTO_FILAMENT_CHANGE VARIABLE=isprinting VALUE=0
    SET_GCODE_VARIABLE MACRO=AUTO_FILAMENT_CHANGE VARIABLE=was_enabled VALUE=0
	TURN_OFF_HEATERS
    UPDATE_DELAYED_GCODE ID=report_temp DURATION=5
	M106 S0
	G92 E0
	G1 X{X} Y{Y} F18000
	G1 Z{Z} F3200
	G28 Z
	#FILAMENT_PULL
	{% if printer["gcode_macro PRIME_ROUTINE"].primed == 1 %}
	    PURGE_NOZZLE
	    G4 P12000
	    FILAMENT_PULL
	{% endif %}
	SET_GCODE_VARIABLE MACRO=PRIME_ROUTINE VARIABLE=primed VALUE=0
	M82
	M84
	M400
	ZOFFSAVE
    CANCEL_PRINT_BASE
##################################################################################

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}
  
##################################################################################

# [gcode_macro RESUME]
# description: Resume the actual running print
# rename_existing: RESUME_BASE
# gcode:
  # ##### get user parameters or use default #####
  # {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  # {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  # {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
  # {% set sp_move        = velocity if not macro_found else client.speed_move|default(velocity) %}
  # ##### end of definitions #####
  # _CLIENT_EXTRUDE
  # RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
  
##################################################################################

# Usage: SET_PAUSE_NEXT_LAYER [ENABLE=[0|1]] [MACRO=<name>]
[gcode_macro SET_PAUSE_NEXT_LAYER]
description: Enable a pause if the next layer is reached
gcode:
  {% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
  {% set ENABLE = params.ENABLE | default(1) | int != 0 %}
  {% set MACRO = params.MACRO | default(pause_next_layer.call, True) %}
  SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"
  
##################################################################################

# Usage: SET_PAUSE_AT_LAYER [ENABLE=[0|1]] [LAYER=<number>] [MACRO=<name>]
[gcode_macro SET_PAUSE_AT_LAYER]
description: Enable/disable a pause if a given layer number is reached
gcode:
  {% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
  {% set ENABLE = params.ENABLE | int != 0 if params.ENABLE is defined
             else params.LAYER is defined %}
  {% set LAYER = params.LAYER | default(pause_at_layer.layer) | int %}
  {% set MACRO = params.MACRO | default(pause_at_layer.call, True) %}
  SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

##################################################################################

# Usage: SET_PRINT_STATS_INFO [TOTAL_LAYER=<total_layer_count>] [CURRENT_LAYER= <current_layer>]
[gcode_macro SET_PRINT_STATS_INFO]
rename_existing: SET_PRINT_STATS_INFO_BASE
description: Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer: { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer  : { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode:
  {% if pause_next_layer.enable %}
    {action_respond_info("%s, forced by pause_next_layer" % pause_next_layer.call)}
    {pause_next_layer.call} ; execute the given gcode to pause, should be either M600 or PAUSE
    SET_PAUSE_NEXT_LAYER ENABLE=0
  {% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
    {action_respond_info("%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer))}
    {pause_at_layer.call} ; execute the given gcode to pause, should be either M600 or PAUSE
    SET_PAUSE_AT_LAYER ENABLE=0
  {% endif %}
  SET_PRINT_STATS_INFO_BASE {rawparams}
  
##################################################################################

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode:
  ##### get user parameters or use default #####
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
  {% set use_custom     = False if not macro_found
                     else False if client.use_custom_pos is not defined
                     else True  if client.use_custom_pos|lower == 'true'
                     else False %}
  {% set custom_park_x  = 0.0 if not macro_found else client.custom_park_x|default(0.0) %}
  {% set custom_park_y  = 0.0 if not macro_found else client.custom_park_y|default(0.0) %}
  {% set park_dz        = 2.0 if not macro_found else client.custom_park_dz|default(2.0)|abs %}
  {% set sp_hop         = 900  if not macro_found else client.speed_hop|default(15) * 60 %}
  {% set sp_move        = velocity * 60 if not macro_found else client.speed_move|default(velocity) * 60 %}
  ##### get config and toolhead values #####
  {% set origin    = printer.gcode_move.homing_origin %}
  {% set act       = printer.gcode_move.gcode_position %}
  {% set max       = printer.toolhead.axis_maximum %}
  {% set cone      = printer.toolhead.cone_start_z|default(max.z) %} ; height as long the toolhead can reach max and min of an delta
  {% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
                else False %}
  ##### define park position #####
  {% set z_min = params.Z_MIN|default(0)|float %}
  {% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
  {% set x_park = params.X       if params.X is defined
             else custom_park_x  if use_custom
             else 0.0            if round_bed
             else (max.x - 5.0) %}
  {% set y_park = params.Y       if params.Y is defined
             else custom_park_y  if use_custom
             else (max.y - 5.0)  if round_bed and z_park < cone
             else 0.0            if round_bed
             else (max.y - 5.0) %}
  ##### end of definitions #####
  _CLIENT_RETRACT
  {% if "xyz" in printer.toolhead.homed_axes %}
    G90
    G1 Z{z_park} F{sp_hop}
    G1 X{x_park} Y{y_park} F{sp_move}
    {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 
  
##################################################################################

# Macros
[include macros.cfg]

# Probe 
#[include probe.cfg]

# Bed Mesh 
#[include bed-mesh.cfg]

# Bed Tilt 
[include bed-tilt.cfg]

# Calibration
[include calibration.cfg]

# Bed calibration
[include calibration.cfg] 

# Z Tilt Adjustment
[include z-tilt.cfg]

# Auto Filament Change
[include auto-filament-change.cfg]

# Extruder Accel
[include extruder-accel.cfg]

# Materials
[include materials.cfg]

[respond]

[save_variables]
filename: /home/pi/printer_data/config/variables.cfg

[delayed_gcode last_extruder]
gcode:
	{% set svv = printer.save_variables.variables %}
	{% if svv.currentextruder == 'extruder' %}
		SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder
		SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=
		SET_GCODE_VARIABLE MACRO=AUTO_FILAMENT_CHANGE VARIABLE=active_extruder VALUE=0
	{% else %}
		SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=
		SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder
		SET_GCODE_VARIABLE MACRO=AUTO_FILAMENT_CHANGE VARIABLE=active_extruder VALUE=1
	{% endif %}
initial_duration: 1.0

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_GCODE

[display_status]

[gcode_arcs]
resolution: 0.75

[pause_resume]
recover_velocity: 200

# Enable endstop phase calibration 
[endstop_phase]

[skew_correction]

[input_shaper]
shaper_freq_x: 42.35  # frequency for the X mark of the test model
shaper_freq_y: 42.35  # frequency for the Y mark of the test model
shaper_type: mzv

###########################################################################
###########################################################################
#                                                                         #
#			Motor Configuration                               #
#                                                                         #
###########################################################################
###########################################################################

[stepper_x]
step_pin: PE9
dir_pin: !PF1
enable_pin: !PF2
rotation_distance: 40
microsteps: 128
step_pulse_duration: 0.000000100
endstop_pin: PB10
position_endstop: -6.5
position_min: -8.0
position_max: 321
homing_speed: 75
homing_retract_dist: 5.0

[tmc2209 stepper_x]
uart_pin: PC13
run_current: 0.849
interpolate: False
stealthchop_threshold: 0
driver_TBL: 1
driver_TOFF: 3
driver_HEND: 3
driver_HSTRT: 2
diag_pin: PE12
sense_resistor: 0.11
driver_PWM_REG: 1
driver_PWM_FREQ: 1
driver_PWM_OFS: 36
driver_PWM_GRAD: 14
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True

############################################################################

[stepper_y]
step_pin: PE11
dir_pin: PE8
enable_pin: !PD7
rotation_distance: 40
microsteps: 128
step_pulse_duration: 0.000000100
endstop_pin: PE12
position_endstop: 303
position_min: -3
position_max: 304
homing_speed: 75

[tmc2209 stepper_y]
uart_pin: PE3
run_current: 1
interpolate: False
stealthchop_threshold: 0
driver_TBL: 1
driver_TOFF: 3
driver_HEND: 2
driver_HSTRT: 2
diag_pin: PE12
#sense_resistor: 0.5
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True

#############################################################################

[stepper_z]
step_pin: PE13
dir_pin: !PC2
enable_pin: !PC0
rotation_distance: 8
microsteps: 128
#step_pulse_duration: 0.000000100
endstop_pin: PG8
#position_endstop: 343
position_min: -3.5
position_max: 345
homing_speed: 12.0
homing_retract_dist: 5.0
homing_retract_speed: 15
second_homing_speed: 3

[tmc2209 stepper_z]
uart_pin: PE1
run_current: 0.700
interpolate: False
stealthchop_threshold: 0
driver_TBL: 1
driver_TOFF: 3
driver_HEND: 3
driver_HSTRT: 2
diag_pin: PG8
#sense_resistor: 0.5
#driver_PWM_REG: 15
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True

############################################################################

[stepper_z1]
step_pin: PE14
dir_pin: !PA0
enable_pin: !PC3
rotation_distance: 8
microsteps: 128
#step_pulse_duration: 0.000000100
[tmc2209 stepper_z1]
uart_pin: PD4
run_current: 0.700
interpolate: False
stealthchop_threshold: 0
driver_TBL: 1
driver_TOFF: 3
driver_HEND: 3
driver_HSTRT: 2
#diag_pin: PE15
#sense_resistor: 0.5
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True

############################################################################

[extruder]
step_pin: PD15
dir_pin: PE7
enable_pin: !PA3
full_steps_per_rotation: 200
rotation_distance: 28.90
microsteps: 32
step_pulse_duration: 0.000000100
gear_ratio: 33:11
pressure_advance: 0.0
pressure_advance_smooth_time: 0.04
nozzle_diameter: 0.400
filament_diameter: 2.850
heater_pin: PB1 # Heat0
sensor_pin: PF3 # T0 Header
sensor_type: PT1000
pullup_resistor: 4700
max_power: 1.0
smooth_time: 1.0
control: pid
pid_Kp: 13.948
pid_Ki: 0.992
pid_Kd: 88.663
pwm_cycle_time: 0.1
max_extrude_only_distance: 1200.0
max_extrude_cross_section: 50
max_extrude_only_velocity: 45
max_extrude_only_accel: 5000
instantaneous_corner_velocity: 1.000
min_extrude_temp: 0
min_temp: 0
max_temp: 360

[tmc2209 extruder]
uart_pin: PD1
run_current: 1.1
interpolate: False
stealthchop_threshold: 0
driver_TBL: 1
driver_TOFF: 3
driver_HEND: 3
driver_HSTRT: 1
#diag_pin: PE10
#sense_resistor: 0.5
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True

############################################################################

[extruder_stepper extruder1]
extruder:
step_pin: PD13
dir_pin: !PG9
enable_pin: !PF0
rotation_distance: 28.90
microsteps: 32
#step_pulse_duration: 0.000000100
gear_ratio: 33:11


[tmc2209 extruder_stepper extruder1]
uart_pin: PD6
run_current: 1.1
interpolate: False
stealthchop_threshold: 0
driver_TBL: 1
driver_TOFF: 3
driver_HEND: 3
driver_HSTRT: 1
#diag_pin: PG5
#sense_resistor: 0.5
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True

############################################################################

[heater_bed]
heater_pin: PD12
sensor_pin: PF4 # T1
sensor_type: Generic 3950
control: pid
pid_Kp: 16.040
pid_Ki: 0.342
pid_Kd: 188.273
max_power: 0.5
min_temp: 0
max_temp: 165

############################################################################

[fan]
pin: PC8 #PE5

############################################################################

[heater_fan fan1]
pin: PE5 #PC8
hardware_pwm: False
cycle_time: 0.01
max_power: 1.0
shutdown_speed: 0
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

############################################################################

[controller_fan controller_fan]
pin: PD14
max_power: 0.75
shutdown_speed: 0
cycle_time: 0.010
hardware_pwm: False
kick_start_time: 0.1
off_below: 0.0
fan_speed: 1.0
idle_timeout: 50
idle_speed: 1.0
heater: extruder

############################################################################

#[controller_fan driver_fan]
#pin: PE6
#max_power: 1.0
#shutdown_speed: 0
#cycle_time: 0.010
#hardware_pwm: False
#kick_start_time: 0.1
#off_below: 0.0
#fan_speed: 1.0
#idle_timeout: 50
#idle_speed: 1.0
#heater: extruder

############################################################################

[temperature_fan chamber_fan]
pin: PB0
max_power: 1.0
shutdown_speed: 0.0
cycle_time: 0.10
hardware_pwm: False
kick_start_time: 0.05
off_below: 0.15
sensor_type: Generic 3950
sensor_pin: PF6
control: pid
pid_Kp: 20.040
pid_Ki: 0.050
pid_Kd: 190
#pid_deriv_time: 1
#pid_integral_max: 1
#max_delta:
min_temp: 0
max_temp:120
target_temp: 40.0
max_speed: 1.0
min_speed: 0.0
gcode_id: C

############################################################################

[gcode_macro M141]
#default_parameter_S: 0
#default_parameter_P: 0
gcode:
	{% set S = params.S|default(0)|float %}
	{% set R = params.R|default(0)|float %}
	SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber_fan" target={S}

############################################################################

#[heater_fan fan2]
#pin: PE6


#############################################################################
#######################      LED CONTROL     ################################
#############################################################################

[output_pin case_light]
pin: PE6
pwm: True
#static_value:
#   If this is set, then the pin is assigned to this value at startup
#   and the pin can not be changed during runtime. A static pin uses
#   slightly less ram in the micro-controller. The default is to use
#   runtime configuration of pins.
value: 1.0
#   The value to initially set the pin to during MCU configuration.
#   The default is 0 (for low voltage).
#shutdown_value:
#   The value to set the pin to on an MCU shutdown event. The default
#   is 0 (for low voltage).
cycle_time: 0.001
#hardware_pwm: False

############################################################################

[neopixel progress_leds]
pin: PC9
chain_count: 37
#color_order: RBG   #The default is GRB.
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0

############################################################################

[neopixel heater_leds]
pin: PC1
chain_count: 2
#color_order: RBG   #The default is GRB.
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0

############################################################################

[led_effect set_progress_leds]
leds:
    neopixel:progress_leds
autostart: true
frame_rate: 24
layers:
    static 0 0 top (1.0, 1.0, 1.0)

############################################################################

[led_effect set_nozzle_leds]
leds:
    neopixel:heater_leds
autostart: true
frame_rate: 24
layers:
    static 0 0 top (1.0, 1.0, 1.0)

############################################################################

[led_effect progress_bar]
leds:
    neopixel:progress_leds
autostart: false
frame_rate: 24
layers:
    progress  -2  0 subtract    ( 0, 0, 0),( 1, 0, 1)
    static     0  0 top    ( 1, 1, 1)

############################################################################
       
[led_effect nozzle_heating]
leds:
    neopixel:heater_leds
    neopixel:progress_leds
autostart: true
frame_rate: 24
heater: extruder
layers:
    heater 35 0 add (0,0,0),(1,1,1)
    breathing 3 0 top (1, 0.18, 0.0)

############################################################################

[led_effect nozzle_cooling]
leds:
    neopixel:heater_leds
autostart: false
frame_rate: 24
heater: extruder
layers:
    heater 50 0 add (0,0,0),(1,1,1)
    breathing 15 0 top (1, 0.3, 0.0)

############################################################################

[led_effect atc_leds]
leds:
    neopixel:heater_leds
autostart: false
frame_rate: 24
layers:
    linearfade 3 0 top (0.0, 1.0, 1.0),(0.0,0.0,1.0)

############################################################################

[gcode_macro status_printing]
gcode:
    #STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=progress_bar REPLACE=1 FADETIME=1.5

############################################################################

[gcode_macro status_heating]
gcode:
    #STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=nozzle_heating REPLACE=1 FADETIME=1.5

############################################################################
    
[gcode_macro status_cooling]
gcode:
    #STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=nozzle_cooling REPLACE=1 FADETIME=1.5

############################################################################

[gcode_macro nozzle_idle]
gcode:
    #STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=set_nozzle_leds REPLACE=1 FADETIME=1.5
    
############################################################################

[gcode_macro status_atc]
gcode:
    #STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=atc_leds REPLACE=1 FADETIME=1.5

############################################################################


[mcu]
serial: /dev/ttyACM0
#serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_20004F001751363436393637-if00

############################################################################

[printer]
#buffer_time_high: 6
kinematics: cartesian
max_velocity: 500
max_accel: 7000
max_accel_to_decel: 7000
max_z_velocity: 25
max_z_accel: 200
square_corner_velocity: 12.0

############################################################################

[probe]
pin: PG5
#z_offset: -0.600	#Z position after probing
speed: 3.0	#Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
samples: 3
#   The number of times to probe each point. The probed z-values will
#   be averaged. The default is to probe 1 time.
#sample_retract_dist: 0.5
#   The distance (in mm) to lift the toolhead between each sample (if
#   sampling more than once). The default is 2mm.
lift_speed: 10
#   Speed (in mm/s) of the Z axis when lifting the probe between
#   samples. The default is to use the same value as the 'speed'
#   parameter.
samples_result: average
#   The calculation method when sampling more than once - either
#   "median" or "average". The default is average.
samples_tolerance: 0.100
#   The maximum Z distance (in mm) that a sample may differ from other
#   samples. If this tolerance is exceeded then either an error is
#   reported or the attempt is restarted (see
#   samples_tolerance_retries). The default is 0.100mm.
samples_tolerance_retries: 1
#   The number of times to retry if a sample is found that exceeds
#   samples_tolerance. On a retry, all current samples are discarded
#   and the probe attempt is restarted. If a valid set of samples are
#   not obtained in the given number of retries then an error is
#   reported. The default is zero which causes an error to be reported
#   on the first sample that exceeds samples_tolerance.

############################################################################

[gcode_macro BABYZ]
#default_parameter_S: 0
gcode:
   {% set S = params.S|default(2)|float %}
   SET_GCODE_OFFSET MOVE=1 Z={S}

############################################################################

[delayed_gcode report_temp]
initial_duration: 5
gcode:
  update_leds
  UPDATE_DELAYED_GCODE ID=report_temp DURATION=5

############################################################################

[gcode_macro update_leds]
gcode:  
	{% if printer["gcode_macro AUTO_FILAMENT_CHANGE"].isprinting == 0 %}
		{% if printer.extruder.target == 0 %}
			{% if printer.extruder.temperature > 50.0 %}
				status_cooling
			{% else %}
				nozzle_idle
			{% endif %}
		{% endif %}
	{% endif %}
############################################################################

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PG4, EXP1_3=PD11, EXP1_5=PG2, EXP1_7=PG6, EXP1_9=<GND>,
    EXP1_2=PA8, EXP1_4=PD10, EXP1_6=PG3, EXP1_8=PG7, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB14, EXP2_3=PG10, EXP2_5=PF11, EXP2_7=PF12,  EXP2_9=<GND>,
    EXP2_2=PB13, EXP2_4=PB12, EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=PF13
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "spi2"

# See the sample-lcd.cfg file for definitions of common LCD displays.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = -0.300
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.452187, 0.318437, 0.522500
#*# 	0.000000, 0.135312, 0.062812
#*# 	-0.147344, -0.265937, -0.111875
#*# tension = 0.15
#*# min_x = 30.0
#*# algo = bicubic
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 30.0
#*# x_count = 3
#*# max_y = 270.0
#*# mesh_x_pps = 2
#*# max_x = 270.0
#*#
#*# [stepper_z]
#*# position_endstop = 343.272
#*#
#*# [endstop_phase stepper_y]
#*# trigger_phase = 66/128
#*#
#*# [bed_tilt]
#*# x_adjust = -0.000068
#*# y_adjust = -0.000866
#*# z_adjust = 0.445749
