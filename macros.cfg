#################################################################################
######################## General Macros - Aura M1	#########################
#################################################################################


##############################################################################
#	Start Gcode
#	This is the macro called in prior to starting a print job
#	Routines like bed level, z tilt and others necessary to be done on every print should be called inside this macro

[gcode_macro START_GCODE]

gcode:
	SET_GCODE_VARIABLE MACRO=AUTO_FILAMENT_CHANGE VARIABLE=isprinting VALUE=1
    UPDATE_DELAYED_GCODE ID=report_temp DURATION=0
    status_printing
	G92 E0
	#M204 S2500
	Z_TILT_ADJUST
	BED_TILT_CALIBRATE
	#BED_MESH_CALIBRATE
	PARK_HEAD
	#G1 X{X} Y{Y} F18000	Position set in macro PARK_HEAD
	#G1 Z{Z} F600
	#M204 S5000
###############################################################################

###############################################################################
#	End Gcode
#	This is the macro called in after completing a print job

[gcode_macro END_GCODE]

gcode:
	{% set X = params.X|default(280)|float %}
	{% set Y = params.Y|default(303)|float %}
	{% set Z = params.Z|default(340)|float %}
	{% set E = params.E|default(-25)|float %}
	SET_GCODE_VARIABLE MACRO=AUTO_FILAMENT_CHANGE VARIABLE=isprinting VALUE=0
  	SET_GCODE_VARIABLE MACRO=AUTO_FILAMENT_CHANGE VARIABLE=was_enabled VALUE=0
  	UPDATE_DELAYED_GCODE ID=report_temp DURATION=5
	M104 S0
	M106 S0
	G92 E0
	G91
	G1 Z10 E-5 F2700
	G90
	#G1 E{E} F2750
	M400
	G1 X{X} Y{Y} E{E} F18000
	G1 Z{Z} F2500
	G28 Z
	#M82
	#M84
    	PURGE_NOZZLE
	M400
	G4 P12000
	FILAMENT_PULL
	M400
	G1 Y280 F12000
	ZOFFSAVE
###############################################################################

# ###############################################################################
# #	Cancel Gcode
# #	Macro executed whenever a print job is cancelled

# [gcode_macro CANCEL_GCODE]

# gcode:
	# {% set X = params.X|default(280)|float %}
	# {% set Y = params.Y|default(303)|float %}
	# {% set Z = params.Z|default(340)|float %}
	# {% set E = params.E|default(-25)|float %}
	# SET_GCODE_VARIABLE MACRO=AUTO_FILAMENT_CHANGE VARIABLE=isprinting VALUE=0
    # SET_GCODE_VARIABLE MACRO=AUTO_FILAMENT_CHANGE VARIABLE=was_enabled VALUE=0
	# TURN_OFF_HEATERS
    # UPDATE_DELAYED_GCODE ID=report_temp DURATION=5
	# M106 S0
	# G92 E0
	# G1 X{X} Y{Y} F18000
	# G1 Z{Z} F3200
	# G28 Z
	# #FILAMENT_PULL
	# {% if printer["gcode_macro PRIME_ROUTINE"].primed == 1 %}
	    # PURGE_NOZZLE
	    # G4 P12000
	    # FILAMENT_PULL
	# {% endif %}
	# SET_GCODE_VARIABLE MACRO=PRIME_ROUTINE VARIABLE=primed VALUE=0
	# M82
	# M84
	# M400
	# ZOFFSAVE
# ##################################################################################

###############################################################################
#	Park Position
#	Move the printhead to the specified park position when pausing or other ocasions

[gcode_macro PARK_HEAD]

gcode:
	{% set X = params.X|default(320)|float %}
	{% set Y = params.Y|default(303)|float %}
	{% set Z = params.Z|default(20)|float %}
	{% set E = params.E|default(-75)|float %}
	#PAUSE
	#G91
	#G1 E-25.0 F3000
	G1 Z{Z} F700
	G90
	G1 X280 Y{Y} F18000
	M400
	G1 X{X} F18000
###############################################################################

###############################################################################
#	Filament Cold Pull
#	Waits until certain cooldown temp and pulls the filament a little to break
#	it clean, avoiding filament stretch inside the ProExtruder

[delayed_gcode f_pull]

gcode:
	G1 E-80 F1750
	M400
	M84

[gcode_macro FILAMENT_PULL]
gcode:
	#M83
	G1 E-75 F3000
	#TEMPERATURE_WAIT SENSOR=extruder  MAXIMUM=85
	#G1 E-80 F3200
	M400
	M84
	M82
		
###############################################################################

###############################################################################
#	Remove Pro Extruder
#	Macro used to remove the Pro Extruder from print head

# [gcode_macro REMOVE_NOZZLE]

# gcode:
	# {% set X = params.X|default(150)|float %}
	# {% set Y = params.Y|default(150)|float %}
	# {% set Z = params.Z|default(340)|float %}
	# {% set E = params.E|default(-100)|float %}
	# {% set T = params.T|default(235)|float %}
	# M104 S{T}
	# {% if 'xy' in printer.toolhead.homed_axes %}
		# G1 X{X} Y{Y} F18000
	# {% else %}
		# G28
		# G1 X{X} Y{Y} F18000
	# {% endif %}
	# M109 S{T}
	# G92 E0
	# G1 E10 F600
	# G1 E{E} F1500
###############################################################################	

###############################################################################
#	Insert Pro Extruder
#	Macro used to insert the new Pro Extruder from print head

# [gcode_macro INSERT_NOZZLE]

# gcode:
	# {% set X = params.X|default(150)|float %}
	# {% set Y = params.Y|default(150)|float %}
	# {% set Z = params.Z|default(340)|float %}
	# {% set E = params.E|default(90)|float %}
	# {% set T = params.T|default(235)|float %}
	# M400
	# G4P5000
	# M104 S235
	# #G28
	# #G1 X{X} Y{Y} F18000
	# M109 S{T}
	# G92 E0
	# G1 E{E} F1000
	# G1 E120 F900
	# M400
	# G92 E0
	# G1 E-25 F2000
	# TURN_OFF_HEATERS
	# M84
	
###############################################################################

###############################################################################
#    Prime Blob/Line
#	 This macro cleans the nozzle prior to starting a print job

[gcode_macro PRIME_ROUTINE]
variable_primed: 0

gcode:
	# {% set X = params.X|default(100)|float %}
	# {% set Y = params.Y|default(100)|float %}
	# {% set Z = params.Z|default(5)|float %}
	# {% set E = params.E|default(100)|float %}
	# {% set EX = params.EX|default(50)|float %}
	G1 Z5 F700
	G92 E0
	G1 E50 F750
	G1 E100 F80
	G92 E0
	G1 E-1 F2500
	M400
	G4 P1000
	M204 S5000
	G1 Y260 F6000
	SET_GCODE_VARIABLE MACRO=PRIME_ROUTINE VARIABLE=primed VALUE=1

################################################################################

################################################################################
#    Purge Nozzle
#    This macro purges the melted plastic form the nozzle in the end of the
#    print, prior to filament retraction in order to avoid clogging on the
#    next print job

[gcode_macro PURGE_NOZZLE]

gcode:
    {% set X = params.X|default(280)|float %}
	{% set Y = params.Y|default(303)|float %}
    {% set E = params.E|default(100)|float %}
    #G1 X{X} Y{Y} F18000
	#M400
	G1 X320 F18000
    G1 E12 F100
    G92 E0
    G1 E-20 F3000

################################################################################
# Probe Z offset calibration script
# This script series of commands to automate a probe calibration routine

[gcode_macro CALIBRATE_NOZZLE_HEIGHT]

gcode:
	{% set X = params.X|default(150)|float %}
	{% set Y = params.Y|default(150)|float %}
	{% set Z = params.Z|default(5)|float %}
	{% set E = params.E|default(90)|float %}
	{% set T = params.T|default(235)|float %}
	G28
	G1 Z{Z} F6000
	G1 X{X} Y{Y} F18000
	PROBE_CALIBRATE

#################################################################################

#################################################################################
# Endstop offset calibration script
# Home all axes, probe the nozzle and ovewrite the Z endstop position 

[gcode_macro CALIBRATE_Z_ENDSTOP]

gcode:

	{% set X = params.X|default(150)|float %}
	{% set Y = params.Y|default(150)|float %}
	{% set Z = params.Z|default(5)|float %}
	G28
	G1 Z{Z} F6000
	G1 X{X} Y{Y} F18000
	Z_ENDSTOP_CALIBRATE

#################################################################################
# Filament Load Script - Generic
# This script loads filament, extrudes a little amount and retract for probing

[gcode_macro LOAD_FILAMENT]
variable_zoz: 0

gcode:
	{% set temp = printer.extruder.target|int %}
	{% set X = params.X|default(150)|float %}
	{% set Y = params.Y|default(150)|float %}
	{% set Z = params.Z|default(5)|float %}
	{% set E = params.E|default(-25)|float %}
	{% set T = params.T|default(250)|float %}
	M104 S{T}
	G90
	{% if 'xy' in printer.toolhead.homed_axes %}
		G1 X{X} Y{Y} F18000
		G28 Z
	{% else %}
		G28
		G1 X{X} Y{Y} F18000
	{% endif %}
		M109 S{T}
		G92 E0
		EACCEL_GCODE
		M400
		G92 E0
		G1 E{E} F2750
		SET_GCODE_VARIABLE MACRO=PRIME_ROUTINE VARIABLE=primed VALUE=0
		TURN_OFF_HEATERS
		#G92 E0
		G4 P6000
		FILAMENT_PULL
		M400

###################################################################################

###################################################################################
# Filament Load Script - PACF HT15
# This script loads filament, extrudes a little amount and retract for probing

[gcode_macro LOAD_FILAMENT_CF]

gcode:
	
	{% set X = params.X|default(150)|float %}
	{% set Y = params.Y|default(150)|float %}
	{% set Z = params.Z|default(5)|float %}
	{% set E = params.E|default(-75)|float %}
	{% set T = params.T|default(280)|float %}
	G28 Z0 F1500
	G28 X0 Y0
	G92 E0
	G1 X{X} Y{Y} F18000
	M109 S{T}
	G92 E0
	G1 E800 F2000
	G1 E860 F70
	M400
	M104 S0
	G92 E0
	G1 E-25 F1000
	M84
###################################################################################

###################################################################################
# Filament Unload Script - Generic
# This script heats the nozzle to a certain tempareture and unload the filament

[gcode_macro UNLOAD_FILAMENT]

gcode:
	
	# {% set X = params.X|default(150)|float %}
	# {% set Y = params.Y|default(150)|float %}
	# {% set Z = params.Z|default(5)|float %}
	# {% set E = params.E|default(35)|float %}
	# {% set T = params.T|default(250)|float %}
	#{% if 'xy' in printer.toolhead.homed_axes %}
	#	G1 X{X} Y{Y} F18000
	#	G28 Z
	#{% else %}
	#	G28
	#	G1 X{X} Y{Y} F18000
	#{% endif %}

	#M109 S{T}
	G92 E0 
	#G1 E25 F500
	G1 E-100 F1800
	G1 E-920 F3500
	M400
	M84
	M104 S0
###################################################################################

###################################################################################
# Filament Unload Script - PACF HT15
# This script heats the nozzle to a certain tempareture and unload the filament

[gcode_macro UNLOAD_EXTRUDER_SWITCH]

gcode:
	
	{% set X = params.X|default(150)|float %}
	{% set Y = params.Y|default(150)|float %}
	{% set Z = params.Z|default(5)|float %}
	{% set E = params.E|default(35)|float %}
	{% set T = params.T|default(250)|float %}
	G92 E0 
	G1 E-100 F1200
	G1 E-880 F3500
	M400
	M104 S0
###################################################################################

###################################################################################
# Wait for temp script
# This script waits for the temp specified by M109 but doesn't wait for PID stabilization

[gcode_macro M109]
rename_existing: M190.1
variable_tolerance: 1.0
gcode:
	{% set S = params.S|default(off) %}
	{% set R = params.R|default(off) %}
	{% if S != 'off' %}
		M104 S{S}
		#check_temp
        	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={S|float - tolerance}
    	{% elif R != 'off' %}
        	M109 S{R}
    	{% else %}
        	M104 S0
    	{% endif %}
		
###################################################################################

###################################################################################
#
#
[gcode_macro M104]
rename_existing: M104.1
gcode:

	{% set S = params.S|int %}
	{% set nozzle_max = printer.configfile.config.extruder.max_temp|int %}
	{% set nozzle_limiter = nozzle_max-5|int %}
	{% if S >= nozzle_limiter %}
		SET_HEATER_TEMPERATURE HEATER=extruder TARGET={nozzle_limiter}
		status_heating
	{% elif S != 0 %}
		SET_HEATER_TEMPERATURE HEATER=extruder TARGET={S}
		status_heating
	{% else %}
		SET_HEATER_TEMPERATURE HEATER=extruder TARGET={S}
		status_cooling
	{% endif %}


###################################################################################
[gcode_macro M140]
rename_existing: M140.1
gcode:
	{% set S = params.S|int %}
	{% set bed_max = printer.configfile.config.heater_bed.max_temp|int %}
	{% set bed_limiter = bed_max-5|int %}
	{% if S >= bed_limiter %}
		SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed_limiter}
	{% else %}
		SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}
	{% endif %}

################################################################################### 

# [gcode_macro Insert_ProExtruder]
# gcode:
	# FIRMWARE_RESTART

###################################################################################
# This macro calls TMC drivers log
#

[gcode_macro DUMPX]

gcode:
	DUMP_TMC STEPPER=stepper_x

####################################################################################

###################################################################################
# This macro calls TMC drivers log
#

[gcode_macro DUMPY]

gcode:
	DUMP_TMC STEPPER=stepper_y

####################################################################################

###################################################################################
# This macro calls TMC drivers log
#

[gcode_macro DUMPZ]

gcode:
	DUMP_TMC STEPPER=stepper_z

####################################################################################

####################################################################################
# This macro calls TMC drivers log
#

[gcode_macro DUMPE0]

gcode:
	DUMP_TMC STEPPER=extruder

####################################################################################

###################################################################################
# This macro calls TMC drivers log
#

[gcode_macro DUMPE1]

gcode:
	DUMP_TMC STEPPER=extruder1

####################################################################################

####################################################################################

### Search parameters macro

[gcode_macro SEARCH_VARS]
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}

######################################################################################

######################################################################################
#
#	This macro transforms Octodash's babystepping command into incremental values
#
######################################################################################

[gcode_macro babystep]
#variable_current: 0.00
#default_parameter_S: 0.00

gcode:
     {% set S = params.S|float %}
#    {% set now = printer["gcode_macro babystep"].current|float %}   	 ########## get the current Z offset
#    
#    {% set new = now+S|float %} 					 ######### the sum of current Z offset to "S" value received from Octodash
#    
#    SET_GCODE_VARIABLE MACRO=babystep VARIABLE=current VALUE={new}  	 ########## Set the current Z offset to the new value 
#    
#    SET_GCODE_OFFSET MOVE=1 Z={new}	  				 ########## Move nozzle (bed) to the new offset position
#
#    #M118 Now value is: {now}
#    M118 New value is: {new}

     SET_GCODE_OFFSET MOVE=1 Z_ADJUST={S}


#####################################################################################

#####################################################################################

[gcode_macro prntstats]

gcode:
    Status
    {% if printer.webhooks.state != 'Printing' %}

    	SET_LED LED=temp_leds RED=0 GREEN=0 BLUE=1 TRANSMIT=1

    {% else %}

	SET_LED LED=temp_leds RED=0 GREEN=1 BLUE=0 TRANSMIT=1

    {% endif %}

######################################################################################

######################################################################################
#
#	Save new Z Probe Offset from babystepping procedure right away if the printer
#       is idle or excecute the save command at the end of the print gcode
#
######################################################################################

[gcode_macro M500]
variable_isprinting: 0

gcode:
    
    Z_OFFSET_APPLY_PROBE						########### Apply offset to machine's probe value
    STATUS              					
    {% if printer.idle_timeout.state != 'Printing' %}			########### Check if no jobs is running in order to save the config file

	SAVE_CONFIG					 		########### Save the new offset and restart the firmware

    {% else %}
	SET_GCODE_VARIABLE MACRO=M500 VARIABLE=isprinting VALUE=1       ########### If a print jobs is running, set the variable to be excecuted at the end of the print gcode

    {% endif %}

[delayed_gcode save_z_offset]
gcode:
    SAVE_CONFIG

[gcode_macro ZOFFSAVE]

gcode:
    
    {% if printer["gcode_macro M500"].isprinting == 1 %}

	UPDATE_DELAYED_GCODE ID=save_z_offset DURATION=5

    {% endif %}

######################################################################################

######################################################################################
#
#	Neo pixel led color control
#
######################################################################################

# [gcode_macro check_temp]
# gcode:
  # {% set count = 1200 %} ### about 10 minutes count...
  # {% for c in range(count) %}
    # templedcolor_timer 
  # {% endfor %}  

# # Temperature reactive Neopixel using extruder actual temp...
# [gcode_macro templedcolor_timer]
# gcode:
  # {% if printer.extruder.target|int > 0 %}
    # {% if printer.extruder.temperature < printer.extruder.target %} 
      # {% set rosso = (printer.extruder.temperature / printer.extruder.target)|round(2) %}
      # {% set green = (1-(printer.extruder.temperature / printer.extruder.target))|round(2) %}
      # {% set blu = (1-(printer.extruder.temperature / printer.extruder.target))|round(2) %}
      # SET_LED LED=temp_leds RED={rosso} GREEN={green} BLUE={blu}
      # G4 P250
      # M118 B:{printer.heater_bed.temperature|round(1)} /{printer.heater_bed.target|round(1)} T0:{printer.extruder.temperature|round(1)} /{printer.extruder.target|round(1)}
    # {% endif %}  
  # {% else %}
    # M118 Extruder Heater off
  # {% endif %}

#######################################################################################

#######################################################################################

# [gcode_macro echoes]
# gcode:
	# M118 B:{printer.heater_bed.temperature|round(1)} /{printer.heater_bed.target|round(1)} T0:{printer.extruder.temperature|round(1)} /{printer.extruder.target|round(1)}
	
	
#######################################################################################

[gcode_macro DUMP_VARS]
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
        {% if (name1 != "configfile") and (name1 != "bed_mesh" and name2!="mesh_matrix") and (name1 != "mcu" and name2!="mcu_constants") and (name1 != "mcu" and name2!="last_stats") and (name2 != "color_data") and (andm1 != "gcode_macro") %}
            { action_respond_info("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) }
        {% else %}
            { action_respond_info("printer['%s'].%s = %s" % (name1, name2, "...")) }
        {% endif %}
      {% endfor %}
   {% endfor %}
   
########################################################################################

[gcode_macro M900]
gcode:
	{% set svv = printer.save_variables.variables %}
	{% set S = params.S|default(0)|float %}
	{% set P = params.P|default(0)|float %}
	{% if P == 0.8 and S >= 100 %}
		SET_PRESSURE_ADVANCE ADVANCE=0.3 EXTRUDER={svv.currentextruder}
		#RESPOND TYPE=command MSG="acertou miseravi!!"
	{% else %}
		SET_PRESSURE_ADVANCE ADVANCE=0.05 EXTRUDER={svv.currentextruder}
		#RESPOND TYPE=command MSG="zerooouuuu!!"
	{% endif %}
	
	
#######################################################################################

#######################################################################################
#
#									Case Lights
#
#######################################################################################

[gcode_macro case_lights]
variable_state: 1
gcode:
	{% if printer["gcode_macro case_lights"].state == 1 %}
		SET_PIN PIN=case_light VALUE=0
		SET_GCODE_VARIABLE MACRO=case_lights VARIABLE=state VALUE=0
	{% else %}
		SET_PIN PIN=case_light VALUE=1
		SET_GCODE_VARIABLE MACRO=case_lights VARIABLE=state VALUE=1
	{% endif %}

#######################################################################################

#######################################################################################

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    {% if printer['gcode_macro AUTO_FILAMENT_CHANGE'].afc == 1 %}
		G1 X280 Y303 F18000
		G1 X320
		SET_GCODE_VARIABLE MACRO=AUTO_FILAMENT_CHANGE VARIABLE=afc VALUE=0
		M109 S{printer['gcode_macro AUTO_FILAMENT_CHANGE'].target_temp}
        G92 E0
        G1 E750 F3500
        M400
        G92 E0
        G1 E70 F65
        G1 E68 F2000
        G1 Y260 F6000
        RESUME
		nozzle_idle
    {% else %}
        RESTORE_GCODE_STATE NAME=M601_state
        RESUME
		nozzle_idle
    {% endif %}

##############################################################################
